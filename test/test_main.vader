Execute (Get filetype with no option set):
  let g:vim_requester_default_filetype = '42'
  let ft = requester#main#GetFileType(['{"a": 1}'])

Then (Default filetype is returned):
  AssertEqual '42', ft


Execute (Get filetype for empty lines):
  let g:vim_requester_default_filetype = '42'
  let g:vim_requester_auto_filetype = 1
  let ft = requester#main#GetFileType([])

Then (Default filetype is returned):
  AssertEqual '42', ft


Execute (Get filetype for JSON data):
  let g:vim_requester_default_filetype = 'txt'
  let g:vim_requester_auto_filetype = 1
  let ft = requester#main#GetFileType(['{"a": 1}'])

Then (JSON filetype is returned):
  AssertEqual 'json', ft


Execute (Get filetype for XML data):
  let g:vim_requester_default_filetype = 'txt'
  let g:vim_requester_auto_filetype = 1
  let ft = requester#main#GetFileType(['<?xml version="1.0"?>'])

Then (XML filetype is returned):
  AssertEqual 'xml', ft


Execute (Get filetype for HTML data):
  let g:vim_requester_default_filetype = 'txt'
  let g:vim_requester_auto_filetype = 1
  let ft = requester#main#GetFileType(['<!DOCTYPE html>'])

Then (XML filetype is returned):
  AssertEqual 'html', ft


Execute (Get filetype for protobuf data):
  let g:vim_requester_default_filetype = 'txt'
  let g:vim_requester_auto_filetype = 1
  let ft = requester#main#GetFileType(['message {'])

Then (pb_text filetype is returned):
  AssertEqual 'pb_text', ft


Execute (Get filetype for unsupported data):
  let g:vim_requester_default_filetype = 'txt'
  let g:vim_requester_auto_filetype = 1
  let ft = requester#main#GetFileType(['message = "test"'])

Then (Default filetype is returned):
  AssertEqual 'txt', ft


Given (Lines without "no autoformat" directive):
  # This is a test
  some://url.com
  p = 42

Execute (ParseRequestLines):
  let result = requester#main#ParseRequestLines(1, line('$'))

Then (No autoformat is not set):
  AssertEqual 0, has_key(result, 'no_autoformat')


Given (Lines with "no autoformat" directive):
  # This is a test
  # @no_autoformat
  some://url.com
  p = 42

Execute (ParseRequestLines):
  let result = requester#main#ParseRequestLines(1, line('$'))

Then (no_autoformat is set):
  AssertEqual 1, result.no_autoformat
